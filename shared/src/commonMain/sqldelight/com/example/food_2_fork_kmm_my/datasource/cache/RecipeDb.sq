-- all below have made in style of SQLDelight convension
CREATE TABLE  recipe_Entity( -- first we need to create a table its name in system will be Recipe_Entity
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    publisher TEXT NOT NULL,
    featured_image TEXT NOT NULL,
    rating INTEGER NOT NULL,
    source_url TEXT NOT NULL,
    ingredients TEXT NOT NULL,
    date_added REAL NOT NULL,
    date_updated REAL NOT NULL
);

selectAll: -- its a fun name
SELECT *
FROM recipe_Entity;

insertRecipe:
INSERT OR REPLACE
INTO recipe_Entity (
    id,
    title,
    publisher,
    featured_image,
    rating,
    source_url,
    ingredients,
    date_added,
    date_updated
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

searchRecipes:
SELECT * FROM recipe_Entity
WHERE title LIKE ('%' || :query || '%') -- its a wildcard in sqldelight
OR ingredients LIKE ('%' || :query || '%')
-- ORDER BY date_updated DESC -- Ordering can cause duplicates in the results because they all have identical timestamps
LIMIT :pageSize
OFFSET :offset; -- как то связано с пагинацией вроде pageSize * page
-- pagesize = 30, page = 3
-- offset = (pageSize * page-1) = 60
getAllRecipes:
SELECT * FROM recipe_Entity
-- ORDER BY date_updated DESC -- Ordering can cause duplicates in the results because they all have identical timestamps
LIMIT :pageSize
OFFSET :offset;

getRecipeById:
SELECT * FROM recipe_Entity
WHERE id = :id;